version: '3.7'

services:
  dfh-nginx:
    image: nginx:alpine
    container_name: dfh-nginx
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - ./config/nginx/ssl:/etc/nginx/ssl
      - ./config/nginx/includes:/etc/nginx/includes
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./src:/var/www
    depends_on:
      - dfh-prerenderer
    networks:
      defihelper:
        aliases:
          - backend-local.defihelper.io

  dfh-backend:
    image: node:16-alpine
    container_name: dfh-backend
    working_dir: /home/node/app
    restart: unless-stopped
    volumes:
      - ./src/defihelper-backend:/home/node/app
      - ./config:/config
    command: /bin/sh -c "npm run start"
    networks:
      defihelper:

  dfh-scanner:
    image: node:16-alpine
    container_name: dfh-scanner
    working_dir: /home/node/app
    restart: unless-stopped
    volumes:
      - ./src/defihelper-scanner:/home/node/app
      - ./config:/config
    command: /bin/sh -c "npm run start"
    networks:
      defihelper:

  dfh-redis:
    image: redis:6.2.4-alpine
    container_name: dfh-redis
    restart: unless-stopped
    networks:
      defihelper:

  dfh-postgres:
    image: postgres:12.1
    container_name: dfh-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: development
      POSTGRES_PASSWORD: dev
      POSTGRES_DB: development
      PGDATA: /data/postgres
    volumes:
      - ./data/postgres:/data/postgres
      - ./pgsql/init.sh:/docker-entrypoint-initdb.d/init.sh
    networks:
      defihelper:

  dfh-prerenderer:
    image: tvanro/prerender-alpine
    container_name: dfh-prerenderer
    restart: unless-stopped
    environment:
      - MEMORY_CACHE=0
      - CACHE_MAXSIZE=1000
      - CACHE_TTL=6000
    networks:
      defihelper:

volumes:
  node_modules:

networks:
  defihelper:
